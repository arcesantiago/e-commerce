services:
  productservice.api:
    profiles: ["app"]
    image: ${PRODUCT_IMAGE_TAG-}
    container_name: productservice.api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - appnet

  orderservice.api:
    profiles: ["app"]
    image: ${ORDER_IMAGE_TAG-}
    container_name: orderservice.api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - appnet

  db:
    image: postgres:16-alpine 
    container_name: postgresdb
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Romari0!
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    profiles: ["infra","db"]

  redis:
    image: redis:latest
    container_name: redis-local
    ports:
        - "6379:6379"
    networks:
        - appnet
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 3s
        retries: 3
        start_period: 15s
    profiles: ["infra","redis"]
    deploy:
      resources:
        limits:
          memory: 256M

networks:
  appnet:
    name: appnet
    driver: bridge

volumes:
  postgres_data: