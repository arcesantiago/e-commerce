services:
  productservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging 
      - ConnectionStrings__DefaultConnection=Host=postgresdb;Port=5432;Database=product;Username=postgres;Password=Romari0!;
    ports:
      - "8082:8080"
    volumes: []
    
    deploy:
      resources:
        limits:
          memory: 512M
      restart_policy:
        condition: on-failure
    
  orderservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ConnectionStrings__DefaultConnection=Host=postgresdb;Port=5432;Database=order;Username=postgres;Password=Romari0!;
      - Services__ProductClient=http://productservice.api:8080/
    ports:
      - "8081:8080"
    volumes: []

    deploy:
      resources:
        limits:
          memory: 512M
      restart_policy:
        condition: on-failure

  db:
    ports: []
    deploy:
      restart_policy:
        condition: always

  redis:
    image: redis:latest
    container_name: redis-local
    ports:
        - "6379:6379"
    networks:
        - appnet
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 3s
        retries: 3
        start_period: 15s
    deploy:
      resources:
        limits:
          memory: 10M